spring.application.name=EasyNotes

####### SL4J CONFIGURATION ############################
logging.level.root=WARN
logging.level.org.springframework.web=DEBUG
logging.level.com.myapp.service=INFO
logging.file.name=EasyNotes.log
logging.logback.rollingpolicy.max-file-size=10MB
logging.pattern.console=%d{yyyy-MM-dd HH:mm:ss} - %logger{36} - %msg%n

######## POSTGRES DATABASE CONFIGURATION #############
#Using docker postgresql container through docker compose config file "compose.yaml"
spring.datasource.driver-class-name=org.postgresql.Driver
spring.datasource.url=${DATASOURCE_URL}
spring.datasource.username=${DATASOURCE_USERNAME}
spring.datasource.password=${DATASOURCE_PASSWORD}

######## HIBERNATE CONFIGURATION ##################
spring.jpa.hibernate.ddl-auto=none
spring.jpa.properties.hibernate.hbm2ddl.auto=none

######## LIQUIBASE CONFIGURATION ##################
spring.liquibase.url=${DATASOURCE_URL}
spring.liquibase.user=${DATASOURCE_USERNAME}
spring.liquibase.password=${DATASOURCE_PASSWORD}

######## VAADIN CONFIGURATION #####################
spring.mustache.check-template-location = false
#lounching browser
vaadin.launch-browser = true
vaadin.allowed-packages = com.vaadin,org.vaadin,dev.hilla,com.example.application
#vaadin.blocked-packages=com.easynotes.model, com.easynotes.model

######## JAVA MAIL SENDER CONFIGURATION ############
spring.mail.host=${MAIL_HOST}
spring.mail.port=${MAIL_PORT}
spring.mail.username=${MAIL_USERNAME}
spring.mail.password=${MAIL_PASSWORD}
spring.mail.properties.mail.smtp.auth=true
spring.mail.properties.mail.smtp.starttls.enable=true
spring.mail.properties.mail.smtp.connectiontimeout=5000
spring.mail.properties.mail.smtp.timeout=3000
spring.mail.properties.mail.smtp.writetimeout=5000
spring.mail.jndi-name=mail/Session

######## OAUTH2 CONFIGURATION #####################
#configuration for Google auth
spring.security.oauth2.client.registration.google.client-id=${GOOGLE_CLIENT_ID}
spring.security.oauth2.client.registration.google.client-secret=${GOOGLE_CLIENT_SECRET}
#configuration for GitHub auth
spring.security.oauth2.client.registration.github.client-id=${GITHUB_CLIENT_ID}
spring.security.oauth2.client.registration.github.client-secret=${GITHUB_CLIENT_SECRET}